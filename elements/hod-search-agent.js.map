{"version":3,"file":"hod-search-agent.js","sourceRoot":"","sources":["../../src/elements/hod-search-agent.ts"],"names":[],"mappings":"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","sourcesContent":["import { css, html, query, property } from 'lit-element';\n\nimport { ComboBoxLightElement } from '@vaadin/vaadin-combo-box/vaadin-combo-box-light';\nimport type {\n  ComboBoxElement,\n  ComboBoxItemModel,\n} from '@vaadin/vaadin-combo-box';\nimport { TextField } from 'scoped-material-components/mwc-textfield';\nimport { Avatar } from '@spectrum-web-components/avatar';\n\nimport { AgentProfile, Profile } from '../types';\nimport { sharedStyles } from '../sharedStyles';\nimport { BaseElement } from './base-element';\n\n/**\n * @element hod-search-agent\n * @fires agent-selected - Fired when the user selects some agent. `event.detail.agent` will contain the agent selected\n */\nexport class HodSearchAgent extends BaseElement {\n  /** Public attributes */\n\n  /**\n   * Whether to clear the field when an agent is selected\n   * @attr clear-on-select\n   */\n  @property({ type: Boolean, attribute: 'clear-on-select' })\n  clearOnSelect = false;\n\n  /**\n   * Label for the agent searching field\n   * @attr field-label\n   */\n  @property({ type: String, attribute: 'field-label' })\n  fieldLabel = 'Search agent';\n\n  /** Private properties */\n\n  _searchedAgents: Array<AgentProfile> = [];\n\n  _lastSearchedPrefix: string | undefined = undefined;\n\n  @query('#combo-box')\n  _comboBox!: ComboBoxElement;\n\n  @query('#textfield')\n  _textField!: TextField;\n\n  static get styles() {\n    return [\n      sharedStyles,\n      css`\n        :host {\n          display: flex;\n        }\n      `,\n    ];\n  }\n\n  async searchAgents(nicknamePrefix: string): Promise<Array<AgentProfile>> {\n    this._searchedAgents = await this._profilesService.searchProfiles(\n      nicknamePrefix\n    );\n\n    return this._searchedAgents;\n  }\n\n  firstUpdated() {\n    this._comboBox.dataProvider = async (params, callback) => {\n      const nicknamePrefix = params.filter;\n\n      if (nicknamePrefix.length < 3) return callback([], 0);\n\n      let agents = this._searchedAgents;\n\n      if (nicknamePrefix !== this._lastSearchedPrefix) {\n        this._lastSearchedPrefix = nicknamePrefix;\n        console.log('asdf')\n        agents = await this.searchAgents(params.filter);\n      }\n\n      const nicknames = agents\n        .map(agent => agent.profile.nickname)\n        .filter(nickname => nickname.startsWith(nicknamePrefix));\n\n      callback(nicknames, nicknames.length);\n    };\n\n    this._comboBox.renderer = (\n      root: HTMLElement,\n      comboBox: ComboBoxElement,\n      model: ComboBoxItemModel\n    ) => {\n      const profile: Profile = this._searchedAgents.find(\n        agent => agent.profile.nickname === model.item\n      )?.profile as Profile;\n      root.innerHTML = `\n      <div style=\"display: flex; flex-direction: row; align-items: center; justify-content: flex-start;\">\n        <sp-avatar \n          style=\"\n          --spectrum-avatar-small-height: 20px;\n          --spectrum-avatar-small-width: 20px;\n          margin-right: 8px;\" \n          src=\"${profile.fields.avatar}\"\n        ></sp-avatar>\n        <span>${profile.nickname}</span>\n      </div>`;\n    };\n  }\n\n  onUsernameSelected(e: CustomEvent) {\n    const nickname = e.detail.value;\n\n    const agent = this._searchedAgents.find(\n      agent => agent.profile.nickname === nickname\n    );\n\n    // If nickname matches agent, user has selected it\n    if (agent) {\n      this.dispatchEvent(\n        new CustomEvent('agent-selected', {\n          detail: {\n            agent,\n          },\n        })\n      );\n\n      // If the consumer says so, clear the field\n      if (this.clearOnSelect) {\n        this._comboBox._clear();\n      }\n    }\n  }\n\n  render() {\n    return html`\n      <vaadin-combo-box-light\n        id=\"combo-box\"\n        @value-changed=${this.onUsernameSelected}\n        item-label-path=\"nickname\"\n      >\n        <mwc-textfield\n          id=\"textfield\"\n          class=\"input\"\n          .label=${this.fieldLabel}\n          placeholder=\"At least 3 chars...\"\n          outlined\n        >\n        </mwc-textfield>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  static get scopedElements() {\n    return {\n      'sp-avatar': Avatar,\n      'mwc-textfield': TextField,\n      'vaadin-combo-box-light': ComboBoxLightElement,\n    };\n  }\n}\n"]}