{"version":3,"file":"resolvers.js","sourceRoot":"","sources":["../../src/graphql/resolvers.ts"],"names":[],"mappings":"AASA,SAAS,oBAAoB,CAAC,CAAqB;IACjD,OAAO;QACL,QAAQ,EAAE,CAAC,CAAC,QAAQ;QACpB,GAAG,CAAC,CAAC,MAAM;KACZ,CAAC;AACJ,CAAC;AAED,SAAS,oBAAoB,CAAC,OAAsB;IAClD,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,UAAU,CAAC,CAAC;IAEtE,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAChC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAClD,EAAE,CACH,CAAC;IAEF,OAAO;QACL,QAAQ,EAAE,OAAO,CAAC,QAAQ;QAC1B,MAAM,EAAE,YAAY;KACrB,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,iBAAiB,CAC/B,YAA0B,EAC1B,MAAc,EACd,QAAQ,GAAG,UAAU;IAErB,SAAS,QAAQ,CAAC,OAAe,EAAE,OAAY;QAC7C,OAAO,YAAY,CAAC,QAAQ,CAAC;YAC3B,GAAG,EAAE,IAAW;YAChB,OAAO,EAAE,MAAM;YACf,SAAS,EAAE,QAAQ;YACnB,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC;SACtB,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,cAAc,EAAE;YACd,KAAK,CAAC,OAAO,CAAC,MAAM;gBAClB,IAAI,MAAM,CAAC,OAAO;oBAAE,OAAO,MAAM,CAAC,OAAO,CAAC;gBAE1C,MAAM,YAAY,GAAG,MAAM,QAAQ,CAAC,mBAAmB,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;gBACpE,OAAO,YAAY;oBACjB,CAAC,CAAC,oBAAoB,CAAC,YAAY,CAAC,OAAO,CAAC;oBAC5C,CAAC,CAAC,SAAS,CAAC;YAChB,CAAC;SACF;QACD,KAAK,EAAE;YACL,KAAK,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,cAAc,EAAE;gBACxC,MAAM,SAAS,GAAG,MAAM,QAAQ,CAAC,iBAAiB,EAAE;oBAClD,eAAe,EAAE,cAAc;iBAChC,CAAC,CAAC;gBAEH,OAAO,SAAS,CAAC,GAAG,CAClB,CAAC,KAGA,EAAE,EAAE,CAAC,CAAC;oBACL,EAAE,EAAE,KAAK,CAAC,aAAa;oBACvB,OAAO,EAAE,oBAAoB,CAAC,KAAK,CAAC,OAAO,CAAC;iBAC7C,CAAC,CACH,CAAC;YACJ,CAAC;SACF;QACD,QAAQ,EAAE;YACR,KAAK,CAAC,aAAa,CAAC,CAAC,EAAE,EAAE,OAAO,EAAE;gBAChC,MAAM,aAAa,GAAG,MAAM,QAAQ,CAClC,gBAAgB,EAChB,oBAAoB,CAAC,OAAO,CAAC,CAC9B,CAAC;gBAEF,OAAO;oBACL,EAAE,EAAE,aAAa,CAAC,aAAa;oBAC/B,OAAO,EAAE,aAAa,CAAC,OAAO;iBAC/B,CAAC;YACJ,CAAC;SACF;KACF,CAAC;AACJ,CAAC","sourcesContent":["import { AppWebsocket, CellId, AgentPubKey } from '@holochain/conductor-api';\nimport { Resolvers } from '@apollo/client/core';\nimport { Profile } from '../types';\n\ninterface ProfileBackendForm {\n  username: string;\n  fields: any;\n}\n\nfunction backendFormToProfile(p: ProfileBackendForm): Profile & any {\n  return {\n    username: p.username,\n    ...p.fields,\n  };\n}\n\nfunction profileToBackendForm(profile: Profile & any): ProfileBackendForm {\n  const fields = Object.keys(profile).filter(key => key !== 'username');\n\n  const fieldsObject = fields.reduce(\n    (acc, next) => ({ ...acc, [next]: profile[next] }),\n    {}\n  );\n\n  return {\n    username: profile.username,\n    fields: fieldsObject,\n  };\n}\n\nexport function profilesResolvers(\n  appWebsocket: AppWebsocket,\n  cellId: CellId,\n  zomeName = 'profiles'\n): Resolvers {\n  function callZome(fn_name: string, payload: any) {\n    return appWebsocket.callZome({\n      cap: null as any,\n      cell_id: cellId,\n      zome_name: zomeName,\n      fn_name: fn_name,\n      payload: payload,\n      provenance: cellId[1],\n    });\n  }\n\n  return {\n    HolochainAgent: {\n      async profile(parent) {\n        if (parent.profile) return parent.profile;\n\n        const agentProfile = await callZome('get_agent_profile', parent.id);\n        return agentProfile\n          ? backendFormToProfile(agentProfile.profile)\n          : undefined;\n      },\n    },\n    Query: {\n      async profilesSearch(_, { usernamePrefix }) {\n        const allAgents = await callZome('search_profiles', {\n          username_prefix: usernamePrefix,\n        });\n\n        return allAgents.map(\n          (agent: {\n            agent_pub_key: AgentPubKey;\n            profile: ProfileBackendForm;\n          }) => ({\n            id: agent.agent_pub_key,\n            profile: backendFormToProfile(agent.profile),\n          })\n        );\n      },\n    },\n    Mutation: {\n      async createProfile(_, { profile }) {\n        const profileResult = await callZome(\n          'create_profile',\n          profileToBackendForm(profile)\n        );\n\n        return {\n          id: profileResult.agent_pub_key,\n          profile: profileResult.profile,\n        };\n      },\n    },\n  };\n}\n"]}